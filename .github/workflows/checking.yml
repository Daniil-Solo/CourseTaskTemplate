name: Task Checking

on:
  pull_request:
    paths:
      - 'src/code/**'
    branches: [ "master", "main" ]

  workflow_dispatch:

jobs:
  auto_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Run tests
        run: |
          poetry run pytest 

  ollama_checking:
    runs-on: ubuntu-latest
    needs: auto_tests
    if: success()
    env:
      MODEL_NAME: "qwen2.5-coder:7b"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare environment
        env:
          GITHUB_TOKEN: ${{ github.token }}
        shell: bash
        run: |
          REPO_NAME=$(gh pr view ${{ github.event.pull_request.number }} --json headRepository --jq '.headRepository.name')
          REPO_OWNER_LOGIN=$(gh pr view ${{ github.event.pull_request.number }} --json headRepositoryOwner --jq '.headRepositoryOwner.login')
          echo "FULL_REPO_NAME=${REPO_OWNER_LOGIN}/${REPO_NAME}" >> $GITHUB_ENV
          
          PULL_NUMBER=${{ github.event.pull_request.number }}
          echo "PULL_NUMBER=${PULL_NUMBER}" >> $GITHUB_ENV
          
          GITHUB_TOKEN=${{ github.token }}
          echo "GITHUB_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV
        
          PR_URL=$(gh pr view ${{ github.event.pull_request.number }} --json url --jq '.url')
          REPO_URL=$(echo "$PR_URL" | sed 's|/pull/.*||')
          PARENT_REPO_URL=$(gh repo view "$REPO_URL" --json parent --jq '.parent')
          echo "PARENT_REPO_URL=${PARENT_REPO_URL}" >> $GITHUB_ENV
          
          if [[ -z "$PARENT_REPO_URL" ]]; then
              echo "Репозиторий задания не существует"
          else
              echo "Репозиторий задания: $PARENT_REPO_URL"
          fi

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      
      - name: Run Grading System
        run: |
          poetry run python -m src.grading_system.run "$MODEL_NAME"

#      - name: Install Ollama
#        run: |
#          curl -fsSL https://ollama.com/install.sh | bash
#          sleep 5
#          ollama run $MODEL_NAME
